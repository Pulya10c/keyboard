!function(Q){var B={};function F(n){if(B[n])return B[n].exports;var c=B[n]={i:n,l:!1,exports:{}};return Q[n].call(c.exports,c,c.exports,F),c.l=!0,c.exports}F.m=Q,F.c=B,F.d=function(Q,B,n){F.o(Q,B)||Object.defineProperty(Q,B,{enumerable:!0,get:n})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,B){if(1&B&&(Q=F(Q)),8&B)return Q;if(4&B&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var n=Object.create(null);if(F.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:Q}),2&B&&"string"!=typeof Q)for(var c in Q)F.d(n,c,function(B){return Q[B]}.bind(null,c));return n},F.n=function(Q){var B=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(B,"a",B),B},F.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)},F.p="",F(F.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_style_css__WEBPACK_IMPORTED_MODULE_0__);\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n/* eslint-disable func-names */\n\n\nfunction Keyboard() {\n  var buttonSourse = [[['key', 'Backquote', 'ё', 'Ё', '`', '~'], ['key', 'Digit1', '1', '!', '1', '!'], ['key', 'Digit2', '2', '\"', '2', '@'], ['key', 'Digit3', '3', '№', '3', '#'], ['key', 'Digit4', '4', ';', '4', '$'], ['key', 'Digit5', '5', '%', '5', '%'], ['key', 'Digit6', '6', ':', '6', '^'], ['key', 'Digit7', '7', '?', '7', '&'], ['key', 'Digit8', '8', '*', '8', '*'], ['key', 'Digit9', '9', '(', '9', '('], ['key', 'Digit0', '0', ')', '0', ')'], ['key', 'Minus', '-', '_', '-', '_'], ['key', 'Equal', '=', '+', '=', '+'], ['key backspace', 'Backspace', 'Backspace', 'Backspace', 'Backspace', 'Backspace']], [['key tab', 'Tab', 'Tab', 'Tab', 'Tab', 'Tab'], ['key', 'KeyQ', 'й', 'Й', 'q', 'Q'], ['key', 'KeyW', 'ц', 'Ц', 'w', 'W'], ['key', 'KeyE', 'у', 'У', 'e', 'E'], ['key', 'KeyR', 'к', 'К', 'r', 'R'], ['key', 'KeyT', 'е', 'Е', 't', 'T'], ['key', 'KeyY', 'н', 'Н', 'y', 'Y'], ['key', 'KeyU', 'г', 'Г', 'u', 'U'], ['key', 'KeyI', 'ш', 'Ш', 'i', 'I'], ['key', 'KeyO', 'щ', 'Щ', 'o', 'O'], ['key', 'KeyP', 'з', 'З', 'p', 'P'], ['key', 'BracketLeft', 'х', 'Х', '[', '{'], ['key', 'BracketRight', 'ъ', 'Ъ', ']', '}'], ['key', 'Backslash', '\\\\', '/', '\\\\', '|'], ['key del', 'Delete', 'DEL', 'DEL', 'DEL', 'DEL']], [['key capslock', 'CapsLock', 'CapsLock', 'CapsLock', 'CapsLock', 'CapsLock'], ['key', 'KeyA', 'ф', 'Ф', 'a', 'A'], ['key', 'KeyS', 'ы', 'Ы', 's', 'S'], ['key', 'KeyD', 'в', 'В', 'd', 'D'], ['key', 'KeyF', 'а', 'А', 'f', 'F'], ['key', 'KeyG', 'п', 'П', 'g', 'G'], ['key', 'KeyH', 'р', 'Р', 'h', 'H'], ['key', 'KeyJ', 'о', 'О', 'j', 'J'], ['key', 'KeyK', 'л', 'Л', 'k', 'K'], ['key', 'KeyL', 'д', 'Д', 'l', 'L'], ['key', 'Semicolon', 'ж', 'Ж', ';', ':'], ['key', 'Quote', 'э', 'Э', '\\'', '\"'], ['key enter', 'Enter', 'ENTER', 'ENTER', 'ENTER', 'ENTER']], [['key shift', 'ShiftLeft', 'Shift', 'Shift', 'Shift', 'Shift'], ['key', 'IntlBackslash', '\\\\', '\\\\', '\\\\', '\\\\'], ['key', 'KeyZ', 'я', 'Я', 'z', 'Z'], ['key', 'KeyX', 'ч', 'Ч', 'x', 'X'], ['key', 'KeyC', 'с', 'С', 'c', 'C'], ['key', 'KeyV', 'м', 'М', 'v', 'V'], ['key', 'KeyB', 'и', 'И', 'b', 'B'], ['key', 'KeyN', 'т', 'Т', 'n', 'N'], ['key', 'KeyM', 'ь', 'Ь', 'm', 'M'], ['key', 'Comma', 'б', 'Б', '.', '<'], ['key', 'Period', 'ю', 'Ю', ',', '>'], ['key', 'Slash', '.', ',', '/', '?'], ['key arrow', 'ArrowUp', '▲', '▲', '▲', '▲'], ['key shift-right', 'ShiftRight', 'Shift', 'Shift', 'Shift', 'Shift']], [['key ctrl', 'ControlLeft', 'Ctrl', 'Ctrl', 'Ctrl', 'Ctrl'], ['key win', 'MetaLeft', 'Win', 'Win', 'Win', 'Win'], ['key alt', 'AltLeft', 'Alt', 'Alt', 'Alt', 'Alt'], ['key space', 'Space', ' ', ' ', ' ', ' '], ['key alt', 'AltRight', 'Alt', 'Alt', 'Alt', 'Alt'], ['key ctrl', 'ControlRight', 'Ctrl', 'Ctrl', 'Ctrl', 'Ctrl'], ['key arrow', 'ArrowLeft', '◄', '◄', '◄', '◄'], ['key arrow', 'ArrowDown', '▼', '▼', '▼', '▼'], ['key arrow', 'ArrowRight', '►', '►', '►', '►']]];\n  this.keyboardSymbol = buttonSourse.flat(Infinity).filter(function (el) {\n    return el.length === 1;\n  });\n  this.buttons = \"<textarea id=\\\"result\\\" rows=\\\"6\\\" cols=\\\"60\\\"></textarea>\\n  <div class=\\\"keyboard\\\">\\n  \".concat(buttonSourse.map(function (row) {\n    return \"<div class=\\\"row\\\">\".concat(row.map(function (key) {\n      return \"<div class=\\\"\".concat(key[0], \"\\\">\\n        <span class = \\\"\").concat(key[1], \" on\\\">\\n          <span class = \\\"case down\\\">\").concat(key[2], \"</span>\\n          <span class = \\\"case up\\\">\").concat(key[3], \"</span>\\n        </span>\\n        <span class = \\\"\").concat(key[1], \" off\\\">\\n          <span class = \\\"case down\\\">\").concat(key[4], \"</span>\\n          <span class = \\\"case up\\\">\").concat(key[5], \"</span>\\n        </span>\\n      </div>\");\n    }).join(''), \"\\n    </div>\");\n  }).join(''), \"\\n  \");\n  this.capsLock = false;\n  this.shift = false;\n  this.language = localStorage.getItem('keyboardLanguage') ? localStorage.getItem('keyboardLanguage') : 'ru';\n}\n\nKeyboard.prototype.changeClass = function () {\n  var span = _toConsumableArray(document.querySelectorAll('span'));\n\n  span.forEach(function (button) {\n    if (button.className.indexOf(' on') !== -1) {\n      button.classList.replace('on', 'off');\n    } else if (button.className.indexOf(' off') !== -1) {\n      button.classList.replace('off', 'on');\n    }\n  });\n};\n\nKeyboard.prototype.changeCase = function () {\n  var spans = _toConsumableArray(document.querySelectorAll('.case'));\n\n  spans.forEach(function (button) {\n    if (button.className.indexOf(' down') !== -1) {\n      button.classList.replace('down', 'up');\n    } else if (button.className.indexOf(' up') !== -1) {\n      button.classList.replace('up', 'down');\n    }\n  });\n};\n\nKeyboard.prototype.changeLanguage = function () {\n  this.changeClass();\n\n  if (this.language === 'ru') {\n    this.language = 'en';\n  } else if (this.language === 'en') {\n    this.language = 'ru';\n  }\n\n  localStorage.setItem('keyboardLanguage', this.language);\n};\n\nKeyboard.prototype.checkInput = function (text, key) {\n  if (key === 'Backspace' || key === 'Delete') {\n    return this.deleteSymbol(text);\n  }\n\n  if (key === 'ENTER') {\n    return \"\".concat(text, \"\\n\");\n  }\n\n  var result = this.keyboardSymbol.find(function (_char) {\n    return _char === key;\n  });\n  return result ? text + (result || '') : text;\n};\n\nKeyboard.prototype.deleteSymbol = function (string) {\n  return string.slice(0, -1);\n};\n\nKeyboard.prototype.create = function () {\n  var _this = this;\n\n  var keyShift = 0;\n  var keyAlt = 0;\n  window.addEventListener('load', function () {\n    document.body.append(_this.render());\n\n    if (_this.language !== 'ru') {\n      _this.changeClass();\n    }\n\n    var input = document.getElementById('result');\n    window.addEventListener('keyup', function (e) {\n      e.preventDefault();\n      keyShift = 0;\n      keyAlt = 0;\n\n      _this.pressKeyUp(e);\n\n      input.focus();\n    });\n    window.addEventListener('keydown', function (e) {\n      e.preventDefault();\n\n      var key = _this.keyDown(e);\n\n      input.value = _this.checkInput(input.value, key);\n\n      if (e.key === 'Control') {\n        keyShift = 1;\n      } else if (e.key === 'Alt') {\n        keyAlt = 1;\n      }\n\n      if (keyShift && keyAlt) {\n        _this.changeLanguage();\n      }\n    });\n    document.querySelector('.keyboard').addEventListener('click', function (e) {\n      e.preventDefault();\n      var keyEvent = {};\n\n      if (e.target.className.indexOf('key') !== -1) {\n        keyEvent = {\n          code: e.target.firstElementChild.classList[0],\n          key: e.target.innerText\n        };\n      } else {\n        keyEvent = {\n          code: e.target.parentElement.classList[0],\n          key: e.target.innerText\n        };\n      }\n\n      var key = _this.keyDown(keyEvent);\n\n      input.value = _this.checkInput(input.value, key);\n      setTimeout(_this.pressKeyUp.bind(_this, e), 200);\n    });\n  });\n};\n\nKeyboard.prototype.render = function () {\n  var div = document.createElement('div');\n  div.className = 'wrapper';\n  div.insertAdjacentHTML('afterbegin', this.buttons);\n  return div;\n};\n\nKeyboard.prototype.keyDown = function (e) {\n  var keys = _toConsumableArray(document.querySelectorAll('.key'));\n\n  var symbol = keys.find(function (letters) {\n    return letters.innerHTML.indexOf(e.code) !== -1;\n  });\n  var result = '';\n\n  if (symbol) {\n    if (e.code === 'CapsLock') {\n      this.capsLock = !this.capsLock;\n      result = 'capslock';\n      this.changeCase();\n\n      if (this.capsLock) {\n        symbol.classList.add('active');\n      }\n    } else if (e.code.includes('Shift') && !this.shift) {\n      this.changeCase();\n      this.shift = !this.shift;\n      symbol.classList.add('active');\n      result = symbol.innerText;\n    } else {\n      symbol.classList.add('active');\n      result = symbol.innerText;\n    }\n  }\n\n  return result || ' ';\n};\n\nKeyboard.prototype.pressKeyUp = function (e) {\n  var _this2 = this;\n\n  _toConsumableArray(document.querySelectorAll('.key')).forEach(function (element) {\n    if (element.className.indexOf('active') && element.className.indexOf('capslock') === -1) {\n      element.classList.remove('active');\n    }\n\n    if (element.className.indexOf('active') && element.className.indexOf('capslock') !== -1 && !_this2.capsLock) {\n      element.classList.remove('active');\n    }\n  });\n\n  if (e.type === 'keyup' && e.code.includes('Shift')) {\n    this.shift = false;\n    this.changeCase();\n  }\n};\n\nvar keyboard = new Keyboard();\nkeyboard.create();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9pbmRleC5qcz80MWY1Il0sIm5hbWVzIjpbIktleWJvYXJkIiwiYnV0dG9uU291cnNlIiwia2V5Ym9hcmRTeW1ib2wiLCJmbGF0IiwiSW5maW5pdHkiLCJmaWx0ZXIiLCJlbCIsImxlbmd0aCIsImJ1dHRvbnMiLCJtYXAiLCJyb3ciLCJrZXkiLCJqb2luIiwiY2Fwc0xvY2siLCJzaGlmdCIsImxhbmd1YWdlIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInByb3RvdHlwZSIsImNoYW5nZUNsYXNzIiwic3BhbiIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJidXR0b24iLCJjbGFzc05hbWUiLCJpbmRleE9mIiwiY2xhc3NMaXN0IiwicmVwbGFjZSIsImNoYW5nZUNhc2UiLCJzcGFucyIsImNoYW5nZUxhbmd1YWdlIiwic2V0SXRlbSIsImNoZWNrSW5wdXQiLCJ0ZXh0IiwiZGVsZXRlU3ltYm9sIiwicmVzdWx0IiwiZmluZCIsImNoYXIiLCJzdHJpbmciLCJzbGljZSIsImNyZWF0ZSIsImtleVNoaWZ0Iiwia2V5QWx0Iiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsImJvZHkiLCJhcHBlbmQiLCJyZW5kZXIiLCJpbnB1dCIsImdldEVsZW1lbnRCeUlkIiwiZSIsInByZXZlbnREZWZhdWx0IiwicHJlc3NLZXlVcCIsImZvY3VzIiwia2V5RG93biIsInZhbHVlIiwicXVlcnlTZWxlY3RvciIsImtleUV2ZW50IiwidGFyZ2V0IiwiY29kZSIsImZpcnN0RWxlbWVudENoaWxkIiwiaW5uZXJUZXh0IiwicGFyZW50RWxlbWVudCIsInNldFRpbWVvdXQiLCJiaW5kIiwiZGl2IiwiY3JlYXRlRWxlbWVudCIsImluc2VydEFkamFjZW50SFRNTCIsImtleXMiLCJzeW1ib2wiLCJsZXR0ZXJzIiwiaW5uZXJIVE1MIiwiYWRkIiwiaW5jbHVkZXMiLCJlbGVtZW50IiwicmVtb3ZlIiwidHlwZSIsImtleWJvYXJkIl0s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QXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBSEYsRUFJRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBSkYsRUFLRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBTEYsRUFNRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBTkYsRUFPRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBUEYsRUFRRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBUkYsRUFTRSxDQUFDLEtBQUQsRUFBUSxNQUFSLEVBQWdCLEdBQWhCLEVBQXFCLEdBQXJCLEVBQTBCLEdBQTFCLEVBQStCLEdBQS9CLENBVEYsRUFVRSxDQUFDLEtBQUQsRUFBUSxPQUFSLEVBQWlCLEdBQWpCLEVBQXNCLEdBQXRCLEVBQTJCLEdBQTNCLEVBQWdDLEdBQWhDLENBVkYsRUFXRSxDQUFDLEtBQUQsRUFBUSxRQUFSLEVBQWtCLEdBQWxCLEVBQXVCLEdBQXZCLEVBQTRCLEdBQTVCLEVBQWlDLEdBQWpDLENBWEYsRUFZRSxDQUFDLEtBQUQsRUFBUSxPQUFSLEVBQWlCLEdBQWpCLEVBQXNCLEdBQXRCLEVBQTJCLEdBQTNCLEVBQWdDLEdBQWhDLENBWkYsRUFhRSxDQUFDLFdBQUQsRUFBYyxTQUFkLEVBQXlCLEdBQXpCLEVBQThCLEdBQTlCLEVBQW1DLEdBQW5DLEVBQXdDLEdBQXhDLENBYkYsRUFjRSxDQUFDLGlCQUFELEVBQW9CLFlBQXBCLEVBQWtDLE9BQWxDLEVBQTJDLE9BQTNDLEVBQW9ELE9BQXBELEVBQTZELE9BQTdELENBZEYs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QyxPQUFsQixDQUEwQixRQUExQixLQUF1Q2lELE9BQU8sQ0FBQ2xELFNBQVIsQ0FBa0JDLE9BQWxCLENBQTBCLFVBQTFCLE1BQTBDLENBQUMsQ0FBdEYsRUFBeUY7QUFDdkZpRCxhQUFPLENBQUNoRCxTQUFSLENBQWtCaUQsTUFBbEIsQ0FBeUIsUUFBekI7QUFDRDs7QUFDRCxRQUFJRCxPQUFPLENBQUNsRCxTQUFSLENBQWtCQyxPQUFsQixDQUEwQixRQUExQixLQUF1Q2lELE9BQU8sQ0FBQ2xELFNBQVIsQ0FBa0JDLE9BQWxCLENBQTBCLFVBQTFCLE1BQTBDLENBQUMsQ0FBbEYsSUFBdUYsQ0FBQyxNQUFJLENBQUNiLFFBQWpHLEVBQTJHO0FBQ3pHOEQsYUFBTyxDQUFDaEQsU0FBUixDQUFrQmlELE1BQWxCLENBQXlCLFFBQXpCO0FBQ0Q7QUFDRixHQVJIOztBQVNBLE1BQUl6QixDQUFDLENBQUMwQixJQUFGLEtBQVcsT0FBWCxJQUFzQjFCLENBQUMsQ0FBQ1MsSUFBRixDQUFPYyxRQUFQLENBQWdCLE9BQWhCLENBQTFCLEVBQW9EO0FBQ2xELFNBQUs1RCxLQUFMLEdBQWEsS0FBYjtBQUNBLFNBQUtlLFVBQUw7QUFDRDtBQUNGLENBZEQ7O0FBZ0JBLElBQU1pRCxRQUFRLEdBQUcsSUFBSTlFLFFBQUosRUFBakI7QUFDQThFLFFBQVEsQ0FBQ3JDLE1BQVQiLCJmaWxlIjoiMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIGZ1bmMtbmFtZXMgKi9cclxuXHJcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xyXG5cclxuZnVuY3Rpb24gS2V5Ym9hcmQoKSB7XHJcbiAgY29uc3QgYnV0dG9uU291cnNlID0gW1xyXG4gICAgW1xyXG4gICAgICBbJ2tleScsICdCYWNrcXVvdGUnLCAn0ZEnLCAn0IEnLCAnYCcsICd+J10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0MScsICcxJywgJyEnLCAnMScsICchJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0MicsICcyJywgJ1wiJywgJzInLCAnQCddLFxyXG4gICAgICBbJ2tleScsICdEaWdpdDMnLCAnMycsICfihJYnLCAnMycsICcjJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0NCcsICc0JywgJzsnLCAnNCcsICckJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0NScsICc1JywgJyUnLCAnNScsICclJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0NicsICc2JywgJzonLCAnNicsICdeJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0NycsICc3JywgJz8nLCAnNycsICcmJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0OCcsICc4JywgJyonLCAnOCcsICcqJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0OScsICc5JywgJygnLCAnOScsICcoJ10sXHJcbiAgICAgIFsna2V5JywgJ0RpZ2l0MCcsICcwJywgJyknLCAnMCcsICcpJ10sXHJcbiAgICAgIFsna2V5JywgJ01pbnVzJywgJy0nLCAnXycsICctJywgJ18nXSxcclxuICAgICAgWydrZXknLCAnRXF1YWwnLCAnPScsICcrJywgJz0nLCAnKyddLFxyXG4gICAgICBbJ2tleSBiYWNrc3BhY2UnLCAnQmFja3NwYWNlJywgJ0JhY2tzcGFjZScsICdCYWNrc3BhY2UnLCAnQmFja3NwYWNlJywgJ0JhY2tzcGFjZSddLFxyXG4gICAgXSxcclxuICAgIFtcclxuICAgICAgWydrZXkgdGFiJywgJ1RhYicsICdUYWInLCAnVGFiJywgJ1RhYicsICdUYWInXSxcclxuICAgICAgWydrZXknLCAnS2V5UScsICfQuScsICfQmScsICdxJywgJ1EnXSxcclxuICAgICAgWydrZXknLCAnS2V5VycsICfRhicsICfQpicsICd3JywgJ1cnXSxcclxuICAgICAgWydrZXknLCAnS2V5RScsICfRgycsICfQoycsICdlJywgJ0UnXSxcclxuICAgICAgWydrZXknLCAnS2V5UicsICfQuicsICfQmicsICdyJywgJ1InXSxcclxuICAgICAgWydrZXknLCAnS2V5VCcsICfQtScsICfQlScsICd0JywgJ1QnXSxcclxuICAgICAgWydrZXknLCAnS2V5WScsICfQvScsICfQnScsICd5JywgJ1knXSxcclxuICAgICAgWydrZXknLCAnS2V5VScsICfQsycsICfQkycsICd1JywgJ1UnXSxcclxuICAgICAgWydrZXknLCAnS2V5SScsICfRiCcsICfQqCcsICdpJywgJ0knXSxcclxuICAgICAgWydrZXknLCAnS2V5TycsICfRiScsICfQqScsICdvJywgJ08nXSxcclxuICAgICAgWydrZXknLCAnS2V5UCcsICfQtycsICfQlycsICdwJywgJ1AnXSxcclxuICAgICAgWydrZXknLCAnQnJhY2tldExlZnQnLCAn0YUnLCAn0KUnLCAnWycsICd7J10sXHJcbiAgICAgIFsna2V5JywgJ0JyYWNrZXRSaWdodCcsICfRiicsICfQqicsICddJywgJ30nXSxcclxuICAgICAgWydrZXknLCAnQmFja3NsYXNoJywgJ1xcXFwnLCAnLycsICdcXFxcJywgJ3wnXSxcclxuICAgICAgWydrZXkgZGVsJywgJ0RlbGV0ZScsICdERUwnLCAnREVMJywgJ0RFTCcsICdERUwnXSxcclxuICAgIF0sXHJcbiAgICBbXHJcbiAgICAgIFsna2V5IGNhcHNsb2NrJywgJ0NhcHNMb2NrJywgJ0NhcHNMb2NrJywgJ0NhcHNMb2NrJywgJ0NhcHNMb2NrJywgJ0NhcHNMb2NrJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUEnLCAn0YQnLCAn0KQnLCAnYScsICdBJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleVMnLCAn0YsnLCAn0KsnLCAncycsICdTJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUQnLCAn0LInLCAn0JInLCAnZCcsICdEJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUYnLCAn0LAnLCAn0JAnLCAnZicsICdGJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUcnLCAn0L8nLCAn0J8nLCAnZycsICdHJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUgnLCAn0YAnLCAn0KAnLCAnaCcsICdIJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUonLCAn0L4nLCAn0J4nLCAnaicsICdKJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUsnLCAn0LsnLCAn0JsnLCAnaycsICdLJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUwnLCAn0LQnLCAn0JQnLCAnbCcsICdMJ10sXHJcbiAgICAgIFsna2V5JywgJ1NlbWljb2xvbicsICfQticsICfQlicsICc7JywgJzonXSxcclxuICAgICAgWydrZXknLCAnUXVvdGUnLCAn0Y0nLCAn0K0nLCAnXFwnJywgJ1wiJ10sXHJcbiAgICAgIFsna2V5IGVudGVyJywgJ0VudGVyJywgJ0VOVEVSJywgJ0VOVEVSJywgJ0VOVEVSJywgJ0VOVEVSJ10sXHJcbiAgICBdLFxyXG4gICAgW1xyXG4gICAgICBbJ2tleSBzaGlmdCcsICdTaGlmdExlZnQnLCAnU2hpZnQnLCAnU2hpZnQnLCAnU2hpZnQnLCAnU2hpZnQnXSxcclxuICAgICAgWydrZXknLCAnSW50bEJhY2tzbGFzaCcsICdcXFxcJywgJ1xcXFwnLCAnXFxcXCcsICdcXFxcJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleVonLCAn0Y8nLCAn0K8nLCAneicsICdaJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleVgnLCAn0YcnLCAn0KcnLCAneCcsICdYJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUMnLCAn0YEnLCAn0KEnLCAnYycsICdDJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleVYnLCAn0LwnLCAn0JwnLCAndicsICdWJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleUInLCAn0LgnLCAn0JgnLCAnYicsICdCJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleU4nLCAn0YInLCAn0KInLCAnbicsICdOJ10sXHJcbiAgICAgIFsna2V5JywgJ0tleU0nLCAn0YwnLCAn0KwnLCAnbScsICdNJ10sXHJcbiAgICAgIFsna2V5JywgJ0NvbW1hJywgJ9CxJywgJ9CRJywgJy4nLCAnPCddLFxyXG4gICAgICBbJ2tleScsICdQZXJpb2QnLCAn0Y4nLCAn0K4nLCAnLCcsICc+J10sXHJcbiAgICAgIFsna2V5JywgJ1NsYXNoJywgJy4nLCAnLCcsICcvJywgJz8nXSxcclxuICAgICAgWydrZXkgYXJyb3cnLCAnQXJyb3dVcCcsICfilrInLCAn4payJywgJ+KWsicsICfilrInXSxcclxuICAgICAgWydrZXkgc2hpZnQtcmlnaHQnLCAnU2hpZnRSaWdodCcsICdTaGlmdCcsICdTaGlmdCcsICdTaGlmdCcsICdTaGlmdCddLFxyXG4gICAgXSxcclxuICAgIFtcclxuICAgICAgWydrZXkgY3RybCcsICdDb250cm9sTGVmdCcsICdDdHJsJywgJ0N0cmwnLCAnQ3RybCcsICdDdHJsJ10sXHJcbiAgICAgIFsna2V5IHdpbicsICdNZXRhTGVmdCcsICdXaW4nLCAnV2luJywgJ1dpbicsICdXaW4nXSxcclxuICAgICAgWydrZXkgYWx0JywgJ0FsdExlZnQnLCAnQWx0JywgJ0FsdCcsICdBbHQnLCAnQWx0J10sXHJcbiAgICAgIFsna2V5IHNwYWNlJywgJ1NwYWNlJywgJyAnLCAnICcsICcgJywgJyAnXSxcclxuICAgICAgWydrZXkgYWx0JywgJ0FsdFJpZ2h0JywgJ0FsdCcsICdBbHQnLCAnQWx0JywgJ0FsdCddLFxyXG4gICAgICBbJ2tleSBjdHJsJywgJ0NvbnRyb2xSaWdodCcsICdDdHJsJywgJ0N0cmwnLCAnQ3RybCcsICdDdHJsJ10sXHJcbiAgICAgIFsna2V5IGFycm93JywgJ0Fycm93TGVmdCcsICfil4QnLCAn4peEJywgJ+KXhCcsICfil4QnXSxcclxuICAgICAgWydrZXkgYXJyb3cnLCAnQXJyb3dEb3duJywgJ+KWvCcsICfilrwnLCAn4pa8JywgJ+KWvCddLFxyXG4gICAgICBbJ2tleSBhcnJvdycsICdBcnJvd1JpZ2h0JywgJ+KWuicsICfilronLCAn4pa6JywgJ+KWuiddLFxyXG4gICAgXSxcclxuICBdO1xyXG4gIHRoaXMua2V5Ym9hcmRTeW1ib2wgPSBidXR0b25Tb3Vyc2UuZmxhdChJbmZpbml0eSkuZmlsdGVyKChlbCkgPT4gZWwubGVuZ3RoID09PSAxKTtcclxuICB0aGlzLmJ1dHRvbnMgPSBgPHRleHRhcmVhIGlkPVwicmVzdWx0XCIgcm93cz1cIjZcIiBjb2xzPVwiNjBcIj48L3RleHRhcmVhPlxyXG4gIDxkaXYgY2xhc3M9XCJrZXlib2FyZFwiPlxyXG4gICR7YnV0dG9uU291cnNlLm1hcChcclxuICAgIChyb3cpID0+IGA8ZGl2IGNsYXNzPVwicm93XCI+JHtyb3cubWFwKFxyXG4gICAgICAoa2V5KSA9PiBgPGRpdiBjbGFzcz1cIiR7a2V5WzBdfVwiPlxyXG4gICAgICAgIDxzcGFuIGNsYXNzID0gXCIke2tleVsxXX0gb25cIj5cclxuICAgICAgICAgIDxzcGFuIGNsYXNzID0gXCJjYXNlIGRvd25cIj4ke2tleVsyXX08L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzcyA9IFwiY2FzZSB1cFwiPiR7a2V5WzNdfTwvc3Bhbj5cclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPHNwYW4gY2xhc3MgPSBcIiR7a2V5WzFdfSBvZmZcIj5cclxuICAgICAgICAgIDxzcGFuIGNsYXNzID0gXCJjYXNlIGRvd25cIj4ke2tleVs0XX08L3NwYW4+XHJcbiAgICAgICAgICA8c3BhbiBjbGFzcyA9IFwiY2FzZSB1cFwiPiR7a2V5WzVdfTwvc3Bhbj5cclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgIDwvZGl2PmAsXHJcbiAgICApLmpvaW4oJycpfVxyXG4gICAgPC9kaXY+YCxcclxuICApLmpvaW4oJycpfVxyXG4gIGA7XHJcbiAgdGhpcy5jYXBzTG9jayA9IGZhbHNlO1xyXG4gIHRoaXMuc2hpZnQgPSBmYWxzZTtcclxuICB0aGlzLmxhbmd1YWdlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2tleWJvYXJkTGFuZ3VhZ2UnKSA/IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdrZXlib2FyZExhbmd1YWdlJykgOiAncnUnO1xyXG59XHJcblxyXG5LZXlib2FyZC5wcm90b3R5cGUuY2hhbmdlQ2xhc3MgPSBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc3Qgc3BhbiA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdzcGFuJyldO1xyXG4gIHNwYW4uZm9yRWFjaCgoYnV0dG9uKSA9PiB7XHJcbiAgICBpZiAoYnV0dG9uLmNsYXNzTmFtZS5pbmRleE9mKCcgb24nKSAhPT0gLTEpIHtcclxuICAgICAgYnV0dG9uLmNsYXNzTGlzdC5yZXBsYWNlKCdvbicsICdvZmYnKTtcclxuICAgIH0gZWxzZSBpZiAoYnV0dG9uLmNsYXNzTmFtZS5pbmRleE9mKCcgb2ZmJykgIT09IC0xKSB7XHJcbiAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVwbGFjZSgnb2ZmJywgJ29uJyk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn07XHJcblxyXG5LZXlib2FyZC5wcm90b3R5cGUuY2hhbmdlQ2FzZSA9IGZ1bmN0aW9uICgpIHtcclxuICBjb25zdCBzcGFucyA9IFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2FzZScpXTtcclxuICBzcGFucy5mb3JFYWNoKChidXR0b24pID0+IHtcclxuICAgIGlmIChidXR0b24uY2xhc3NOYW1lLmluZGV4T2YoJyBkb3duJykgIT09IC0xKSB7XHJcbiAgICAgIGJ1dHRvbi5jbGFzc0xpc3QucmVwbGFjZSgnZG93bicsICd1cCcpO1xyXG4gICAgfSBlbHNlIGlmIChidXR0b24uY2xhc3NOYW1lLmluZGV4T2YoJyB1cCcpICE9PSAtMSkge1xyXG4gICAgICBidXR0b24uY2xhc3NMaXN0LnJlcGxhY2UoJ3VwJywgJ2Rvd24nKTtcclxuICAgIH1cclxuICB9KTtcclxufTtcclxuXHJcbktleWJvYXJkLnByb3RvdHlwZS5jaGFuZ2VMYW5ndWFnZSA9IGZ1bmN0aW9uICgpIHtcclxuICB0aGlzLmNoYW5nZUNsYXNzKCk7XHJcbiAgaWYgKHRoaXMubGFuZ3VhZ2UgPT09ICdydScpIHtcclxuICAgIHRoaXMubGFuZ3VhZ2UgPSAnZW4nO1xyXG4gIH0gZWxzZSBpZiAodGhpcy5sYW5ndWFnZSA9PT0gJ2VuJykge1xyXG4gICAgdGhpcy5sYW5ndWFnZSA9ICdydSc7XHJcbiAgfVxyXG4gIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdrZXlib2FyZExhbmd1YWdlJywgdGhpcy5sYW5ndWFnZSk7XHJcbn07XHJcblxyXG5LZXlib2FyZC5wcm90b3R5cGUuY2hlY2tJbnB1dCA9IGZ1bmN0aW9uICh0ZXh0LCBrZXkpIHtcclxuICBpZiAoa2V5ID09PSAnQmFja3NwYWNlJyB8fCBrZXkgPT09ICdEZWxldGUnKSB7XHJcbiAgICByZXR1cm4gdGhpcy5kZWxldGVTeW1ib2wodGV4dCk7XHJcbiAgfVxyXG4gIGlmIChrZXkgPT09ICdFTlRFUicpIHtcclxuICAgIHJldHVybiBgJHt0ZXh0fVxcbmA7XHJcbiAgfVxyXG4gIGNvbnN0IHJlc3VsdCA9IHRoaXMua2V5Ym9hcmRTeW1ib2wuZmluZCgoY2hhcikgPT4gY2hhciA9PT0ga2V5KTtcclxuICByZXR1cm4gcmVzdWx0ID8gdGV4dCArIChyZXN1bHQgfHwgJycpIDogdGV4dDtcclxufTtcclxuXHJcbktleWJvYXJkLnByb3RvdHlwZS5kZWxldGVTeW1ib2wgPSAoc3RyaW5nKSA9PiBzdHJpbmcuc2xpY2UoMCwgLTEpO1xyXG5cclxuS2V5Ym9hcmQucHJvdG90eXBlLmNyZWF0ZSA9IGZ1bmN0aW9uICgpIHtcclxuICBsZXQga2V5U2hpZnQgPSAwO1xyXG4gIGxldCBrZXlBbHQgPSAwO1xyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdsb2FkJywgKCkgPT4ge1xyXG4gICAgZG9jdW1lbnQuYm9keS5hcHBlbmQodGhpcy5yZW5kZXIoKSk7XHJcblxyXG4gICAgaWYgKHRoaXMubGFuZ3VhZ2UgIT09ICdydScpIHtcclxuICAgICAgdGhpcy5jaGFuZ2VDbGFzcygpO1xyXG4gICAgfVxyXG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzdWx0Jyk7XHJcblxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBrZXlTaGlmdCA9IDA7XHJcbiAgICAgIGtleUFsdCA9IDA7XHJcbiAgICAgIHRoaXMucHJlc3NLZXlVcChlKTtcclxuICAgICAgaW5wdXQuZm9jdXMoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBjb25zdCBrZXkgPSB0aGlzLmtleURvd24oZSk7XHJcbiAgICAgIGlucHV0LnZhbHVlID0gdGhpcy5jaGVja0lucHV0KGlucHV0LnZhbHVlLCBrZXkpO1xyXG4gICAgICBpZiAoZS5rZXkgPT09ICdDb250cm9sJykge1xyXG4gICAgICAgIGtleVNoaWZ0ID0gMTtcclxuICAgICAgfSBlbHNlIGlmIChlLmtleSA9PT0gJ0FsdCcpIHtcclxuICAgICAgICBrZXlBbHQgPSAxO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChrZXlTaGlmdCAmJiBrZXlBbHQpIHtcclxuICAgICAgICB0aGlzLmNoYW5nZUxhbmd1YWdlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5rZXlib2FyZCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBsZXQga2V5RXZlbnQgPSB7fTtcclxuICAgICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKCdrZXknKSAhPT0gLTEpIHtcclxuICAgICAgICBrZXlFdmVudCA9IHtcclxuICAgICAgICAgIGNvZGU6IGUudGFyZ2V0LmZpcnN0RWxlbWVudENoaWxkLmNsYXNzTGlzdFswXSxcclxuICAgICAgICAgIGtleTogZS50YXJnZXQuaW5uZXJUZXh0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAga2V5RXZlbnQgPSB7XHJcbiAgICAgICAgICBjb2RlOiBlLnRhcmdldC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdFswXSxcclxuICAgICAgICAgIGtleTogZS50YXJnZXQuaW5uZXJUZXh0LFxyXG4gICAgICAgIH07XHJcbiAgICAgIH1cclxuICAgICAgY29uc3Qga2V5ID0gdGhpcy5rZXlEb3duKGtleUV2ZW50KTtcclxuICAgICAgaW5wdXQudmFsdWUgPSB0aGlzLmNoZWNrSW5wdXQoaW5wdXQudmFsdWUsIGtleSk7XHJcbiAgICAgIHNldFRpbWVvdXQodGhpcy5wcmVzc0tleVVwLmJpbmQodGhpcywgZSksIDIwMCk7XHJcbiAgICB9KTtcclxuICB9KTtcclxufTtcclxuXHJcbktleWJvYXJkLnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgY29uc3QgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgZGl2LmNsYXNzTmFtZSA9ICd3cmFwcGVyJztcclxuICBkaXYuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgdGhpcy5idXR0b25zKTtcclxuICByZXR1cm4gZGl2O1xyXG59O1xyXG5cclxuS2V5Ym9hcmQucHJvdG90eXBlLmtleURvd24gPSBmdW5jdGlvbiAoZSkge1xyXG4gIGNvbnN0IGtleXMgPSBbLi4uZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmtleScpXTtcclxuICBjb25zdCBzeW1ib2wgPSBrZXlzLmZpbmQoKGxldHRlcnMpID0+IGxldHRlcnMuaW5uZXJIVE1MLmluZGV4T2YoZS5jb2RlKSAhPT0gLTEpO1xyXG4gIGxldCByZXN1bHQgPSAnJztcclxuICBpZiAoc3ltYm9sKSB7XHJcbiAgICBpZiAoZS5jb2RlID09PSAnQ2Fwc0xvY2snKSB7XHJcbiAgICAgIHRoaXMuY2Fwc0xvY2sgPSAhdGhpcy5jYXBzTG9jaztcclxuICAgICAgcmVzdWx0ID0gJ2NhcHNsb2NrJztcclxuICAgICAgdGhpcy5jaGFuZ2VDYXNlKCk7XHJcbiAgICAgIGlmICh0aGlzLmNhcHNMb2NrKSB7XHJcbiAgICAgICAgc3ltYm9sLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKGUuY29kZS5pbmNsdWRlcygnU2hpZnQnKSAmJiAhdGhpcy5zaGlmdCkge1xyXG4gICAgICB0aGlzLmNoYW5nZUNhc2UoKTtcclxuICAgICAgdGhpcy5zaGlmdCA9ICF0aGlzLnNoaWZ0O1xyXG4gICAgICBzeW1ib2wuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgIHJlc3VsdCA9IHN5bWJvbC5pbm5lclRleHQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBzeW1ib2wuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgIHJlc3VsdCA9IHN5bWJvbC5pbm5lclRleHQ7XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHQgfHwgJyAnO1xyXG59O1xyXG5cclxuS2V5Ym9hcmQucHJvdG90eXBlLnByZXNzS2V5VXAgPSBmdW5jdGlvbiAoZSkge1xyXG4gIFsuLi5kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcua2V5JyldXHJcbiAgICAuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xyXG4gICAgICBpZiAoZWxlbWVudC5jbGFzc05hbWUuaW5kZXhPZignYWN0aXZlJykgJiYgZWxlbWVudC5jbGFzc05hbWUuaW5kZXhPZignY2Fwc2xvY2snKSA9PT0gLTEpIHtcclxuICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmIChlbGVtZW50LmNsYXNzTmFtZS5pbmRleE9mKCdhY3RpdmUnKSAmJiBlbGVtZW50LmNsYXNzTmFtZS5pbmRleE9mKCdjYXBzbG9jaycpICE9PSAtMSAmJiAhdGhpcy5jYXBzTG9jaykge1xyXG4gICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlJyk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIGlmIChlLnR5cGUgPT09ICdrZXl1cCcgJiYgZS5jb2RlLmluY2x1ZGVzKCdTaGlmdCcpKSB7XHJcbiAgICB0aGlzLnNoaWZ0ID0gZmFsc2U7XHJcbiAgICB0aGlzLmNoYW5nZUNhc2UoKTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCBrZXlib2FyZCA9IG5ldyBLZXlib2FyZCgpO1xyXG5rZXlib2FyZC5jcmVhdGUoKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){eval("var content = __webpack_require__(2);\n\nif (typeof content === 'string') {\n  content = [[module.i, content, '']];\n}\n\nvar options = {}\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = __webpack_require__(4)(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zdHlsZS5jc3M/MTFmNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLG1CQUFPLENBQUMsQ0FBK0Q7O0FBRXJGO0FBQ0EsY0FBYyxRQUFTO0FBQ3ZCOztBQUVBOztBQUVBO0FBQ0E7O0FBRUEsYUFBYSxtQkFBTyxDQUFDLENBQXVFOztBQUU1RjtBQUNBO0FBQ0EiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcz8/cmVmLS01LTEhLi9zdHlsZS5jc3NcIik7XG5cbmlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xufVxuXG52YXIgb3B0aW9ucyA9IHt9XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYgKGNvbnRlbnQubG9jYWxzKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///1\n")},function(module,exports,__webpack_require__){eval('exports = module.exports = __webpack_require__(3)(true);\n// Module\nexports.push([module.i, ".wrapper {\\r\\n  margin: 0 auto;\\r\\n\\r\\n  font-family: \\"Roboto\\", \\"Segoe UI\\", \\"Tahoma, sans-serif\\";\\r\\n}\\r\\n\\r\\n.keyboard {\\r\\n  width: 704px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.keyboard .row {\\r\\n  clear: both;\\r\\n  width: 100%;\\r\\n  height: 40px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.keyboard .key {\\r\\n  float: left;\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  margin-left: 6px;\\r\\n\\r\\n  font-weight: 500;\\r\\n  line-height: 40px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n\\r\\n  background: rgb(58, 66, 78);\\r\\n  border-radius: 3px;\\r\\n  cursor: pointer;\\r\\n\\r\\n  transition: border-radius 0.3s, background 0.2s;\\r\\n}\\r\\n\\r\\n.keyboard .key:hover {\\r\\n  background: rgb(37, 28, 28);\\r\\n}\\r\\n\\r\\n.keyboard .backspace,\\r\\n.keyboard .shift,\\r\\n.keyboard .capslock {\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.keyboard .capslock,\\r\\n.keyboard .shift,\\r\\n.keyboard .enter,\\r\\n.keyboard .del,\\r\\n.keyboard .shift-right,\\r\\n.keyboard .ctrl,\\r\\n.keyboard .alt,\\r\\n.keyboard .win,\\r\\n.keyboard .tab,\\r\\n.keyboard .backspace,\\r\\n.keyboard .arrow {\\r\\n  font-weight: 600;\\r\\n  color: rgb(128, 128, 128);\\r\\n\\r\\n  background-color: rgb(28, 35, 46);\\r\\n}\\r\\n\\r\\n.keyboard .tab {\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n.keyboard .del {\\r\\n  width: 44px;\\r\\n}\\r\\n\\r\\n.keyboard .enter {\\r\\n  width: 86px;\\r\\n}\\r\\n\\r\\n.keyboard .ctrl {\\r\\n  width: 63px;\\r\\n}\\r\\n\\r\\n.keyboard .space {\\r\\n  width: 284px;\\r\\n}\\r\\n\\r\\n.keyboard sup {\\r\\n  position: absolute;\\r\\n\\r\\n  margin: -10px 0 0 -20px;\\r\\n\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n#result {\\r\\n  display: block;\\r\\n  width: 800px;\\r\\n  height: 300px;\\r\\n  margin: 0 auto;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 10px;\\r\\n\\r\\n  font-size: 18px;\\r\\n  color: #444444;\\r\\n}\\r\\n\\r\\n.off {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.up {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.down {\\r\\n  display: inherit;\\r\\n}\\r\\n\\r\\n.keyboard .key.active {\\r\\n  background-color: rgb(85, 113, 238);\\r\\n  border-radius: 50px;\\r\\n}\\r\\n", "",{"version":3,"sources":["style.css"],"names":[],"mappings":"AAAA;EACE,cAAc;;EAEd,uDAAuD;AACzD;;AAEA;EACE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,WAAW;EACX,YAAY;EACZ,gBAAgB;;EAEhB,gBAAgB;EAChB,iBAAiB;EACjB,kBAAkB;EAClB,YAAY;;EAEZ,2BAA2B;EAC3B,kBAAkB;EAClB,eAAe;;EAEf,+CAA+C;AACjD;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;;;EAGE,YAAY;AACd;;AAEA;;;;;;;;;;;EAWE,gBAAgB;EAChB,yBAAyB;;EAEzB,iCAAiC;AACnC;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,kBAAkB;;EAElB,uBAAuB;;EAEvB,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,YAAY;EACZ,aAAa;EACb,cAAc;EACd,mBAAmB;EACnB,aAAa;;EAEb,eAAe;EACf,cAAc;AAChB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,mCAAmC;EACnC,mBAAmB;AACrB","file":"style.css","sourcesContent":[".wrapper {\\r\\n  margin: 0 auto;\\r\\n\\r\\n  font-family: \\"Roboto\\", \\"Segoe UI\\", \\"Tahoma, sans-serif\\";\\r\\n}\\r\\n\\r\\n.keyboard {\\r\\n  width: 704px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.keyboard .row {\\r\\n  clear: both;\\r\\n  width: 100%;\\r\\n  height: 40px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.keyboard .key {\\r\\n  float: left;\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  margin-left: 6px;\\r\\n\\r\\n  font-weight: 500;\\r\\n  line-height: 40px;\\r\\n  text-align: center;\\r\\n  color: white;\\r\\n\\r\\n  background: rgb(58, 66, 78);\\r\\n  border-radius: 3px;\\r\\n  cursor: pointer;\\r\\n\\r\\n  transition: border-radius 0.3s, background 0.2s;\\r\\n}\\r\\n\\r\\n.keyboard .key:hover {\\r\\n  background: rgb(37, 28, 28);\\r\\n}\\r\\n\\r\\n.keyboard .backspace,\\r\\n.keyboard .shift,\\r\\n.keyboard .capslock {\\r\\n  width: 100px;\\r\\n}\\r\\n\\r\\n.keyboard .capslock,\\r\\n.keyboard .shift,\\r\\n.keyboard .enter,\\r\\n.keyboard .del,\\r\\n.keyboard .shift-right,\\r\\n.keyboard .ctrl,\\r\\n.keyboard .alt,\\r\\n.keyboard .win,\\r\\n.keyboard .tab,\\r\\n.keyboard .backspace,\\r\\n.keyboard .arrow {\\r\\n  font-weight: 600;\\r\\n  color: rgb(128, 128, 128);\\r\\n\\r\\n  background-color: rgb(28, 35, 46);\\r\\n}\\r\\n\\r\\n.keyboard .tab {\\r\\n  width: 50px;\\r\\n}\\r\\n\\r\\n.keyboard .del {\\r\\n  width: 44px;\\r\\n}\\r\\n\\r\\n.keyboard .enter {\\r\\n  width: 86px;\\r\\n}\\r\\n\\r\\n.keyboard .ctrl {\\r\\n  width: 63px;\\r\\n}\\r\\n\\r\\n.keyboard .space {\\r\\n  width: 284px;\\r\\n}\\r\\n\\r\\n.keyboard sup {\\r\\n  position: absolute;\\r\\n\\r\\n  margin: -10px 0 0 -20px;\\r\\n\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n#result {\\r\\n  display: block;\\r\\n  width: 800px;\\r\\n  height: 300px;\\r\\n  margin: 0 auto;\\r\\n  margin-bottom: 10px;\\r\\n  padding: 10px;\\r\\n\\r\\n  font-size: 18px;\\r\\n  color: #444444;\\r\\n}\\r\\n\\r\\n.off {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.up {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.down {\\r\\n  display: inherit;\\r\\n}\\r\\n\\r\\n.keyboard .key.active {\\r\\n  background-color: rgb(85, 113, 238);\\r\\n  border-radius: 50px;\\r\\n}\\r\\n"]}]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n')},function(module,exports,__webpack_require__){"use strict";eval('\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return "@media ".concat(item[2], "{").concat(content, "}");\n      }\n\n      return content;\n    }).join(\'\');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery) {\n    if (typeof modules === \'string\') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \'\']];\n    }\n\n    var alreadyImportedModules = {};\n\n    for (var i = 0; i < this.length; i++) {\n      // eslint-disable-next-line prefer-destructuring\n      var id = this[i][0];\n\n      if (id != null) {\n        alreadyImportedModules[id] = true;\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = modules[_i]; // skip already imported module\n      // this implementation is not 100% perfect for weird media query combinations\n      // when a module is imported multiple times with different media queries.\n      // I hope this will never occur (Hey this way we have smaller bundles)\n\n      if (item[0] == null || !alreadyImportedModules[item[0]]) {\n        if (mediaQuery && !item[2]) {\n          item[2] = mediaQuery;\n        } else if (mediaQuery) {\n          item[2] = "(".concat(item[2], ") and (").concat(mediaQuery, ")");\n        }\n\n        list.push(item);\n      }\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || \'\'; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === \'function\') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return "/*# sourceURL=".concat(cssMapping.sourceRoot).concat(source, " */");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\'\\n\');\n  }\n\n  return [content].join(\'\\n\');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);\n  return "/*# ".concat(data, " */");\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzPzI0ZmIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7O0FBRWhCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLDJDQUEyQyxxQkFBcUI7QUFDaEU7O0FBRUE7QUFDQSxLQUFLO0FBQ0wsSUFBSTtBQUNKOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBLG1CQUFtQixpQkFBaUI7QUFDcEM7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxvQkFBb0IscUJBQXFCO0FBQ3pDLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLDhCQUE4Qjs7QUFFOUI7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRUE7QUFDQSxDQUFDOzs7QUFHRDtBQUNBO0FBQ0E7QUFDQSxxREFBcUQsY0FBYztBQUNuRTtBQUNBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXNlU291cmNlTWFwKSB7XG4gIHZhciBsaXN0ID0gW107IC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblxuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIntcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbignJyk7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiAobW9kdWxlcywgbWVkaWFRdWVyeSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcbiAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gbW9kdWxlc1tfaV07IC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcbiAgICAgIC8vIHRoaXMgaW1wbGVtZW50YXRpb24gaXMgbm90IDEwMCUgcGVyZmVjdCBmb3Igd2VpcmQgbWVkaWEgcXVlcnkgY29tYmluYXRpb25zXG4gICAgICAvLyB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG4gICAgICAvLyBJIGhvcGUgdGhpcyB3aWxsIG5ldmVyIG9jY3VyIChIZXkgdGhpcyB3YXkgd2UgaGF2ZSBzbWFsbGVyIGJ1bmRsZXMpXG5cbiAgICAgIGlmIChpdGVtWzBdID09IG51bGwgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgaWYgKG1lZGlhUXVlcnkgJiYgIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWFRdWVyeTtcbiAgICAgICAgfSBlbHNlIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiKFwiLmNvbmNhdChpdGVtWzJdLCBcIikgYW5kIChcIikuY29uY2F0KG1lZGlhUXVlcnksIFwiKVwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuXG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290KS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICByZXR1cm4gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///3\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nvar stylesInDom = {};\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nfunction listToStyles(list, options) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}\n\nfunction addStylesToDom(styles, options) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i];\n    var domStyle = stylesInDom[item.id];\n    var j = 0;\n\n    if (domStyle) {\n      domStyle.refs++;\n\n      for (; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j]);\n      }\n\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j], options));\n      }\n    } else {\n      var parts = [];\n\n      for (; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j], options));\n      }\n\n      stylesInDom[item.id] = {\n        id: item.id,\n        refs: 1,\n        parts: parts\n      };\n    }\n  }\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n\n  if (typeof options.attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      options.attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(options.attributes).forEach(function (key) {\n    style.setAttribute(key, options.attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  var styles = listToStyles(list, options);\n  addStylesToDom(styles, options);\n  return function update(newList) {\n    var mayRemove = [];\n\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i];\n      var domStyle = stylesInDom[item.id];\n\n      if (domStyle) {\n        domStyle.refs--;\n        mayRemove.push(domStyle);\n      }\n    }\n\n    if (newList) {\n      var newStyles = listToStyles(newList, options);\n      addStylesToDom(newStyles, options);\n    }\n\n    for (var _i = 0; _i < mayRemove.length; _i++) {\n      var _domStyle = mayRemove[_i];\n\n      if (_domStyle.refs === 0) {\n        for (var j = 0; j < _domStyle.parts.length; j++) {\n          _domStyle.parts[j]();\n        }\n\n        delete stylesInDom[_domStyle.id];\n      }\n    }\n  };\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///4\n")}]);